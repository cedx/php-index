#!/usr/bin/env node
"use strict";var x=Object.create;var h=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames;var P=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var k=(e,i,s,p)=>{if(i&&typeof i=="object"||typeof i=="function")for(let n of v(i))!j.call(e,n)&&n!==s&&h(e,n,{get:()=>i[n],enumerable:!(p=y(i,n))||p.enumerable});return e};var _=(e,i,s)=>(s=e!=null?x(P(e)):{},k(i||!e||!e.__esModule?h(s,"default",{value:e,enumerable:!0}):s,e));var u=require("node:child_process"),a=_(require("node:console"),1),o=require("node:fs/promises"),f=require("node:os"),t=require("node:path"),b=require("node:process"),l=require("node:util");var m={bugs:"https://github.com/cedx/php-index/issues",description:"A PHP directory index generator.",homepage:"https://docs.belin.io/php-index",license:"MIT",name:"@cedx/php-index",repository:"cedx/php-index",type:"module",version:"2.2.0",author:{email:"cedric@belin.io",name:"C\xE9dric Belin",url:"https://belin.io"},bin:{php_index:"./bin/php_index.cjs"},devDependencies:{"@cedx/php-minifier":"^2.1.1","@fontsource-variable/material-symbols-rounded":"^5.0.29","@lit/localize":"^0.12.1","@lit/localize-tools":"^0.7.2","@lit/task":"^1.0.0","@popperjs/core":"^2.11.8","@types/bootstrap":"^5.2.10","@types/browser-sync":"^2.29.0","@types/eslint__js":"^8.42.3","@types/gulp":"^4.0.17","@types/node":"^20.12.7",bootstrap:"^5.3.3","browser-sync":"^3.0.2",del:"^7.1.0",esbuild:"^0.20.2",eslint:"^8.57.0",execa:"^8.0.1",gulp:"^5.0.0","gulp-replace":"^1.1.4",lit:"^3.1.3","minify-html-literals":"^1.3.5","sass-embedded":"^1.75.0","source-map-js":"^1.2.0",stylelint:"^16.3.1","stylelint-config-standard-scss":"^13.1.0",typescript:"^5.4.5","typescript-eslint":"^7.7.0"},engines:{node:">=20.0.0"},files:["bin/","lib/","src/console/","www/"],keywords:["cli","directory","generator","index","listing","php","web"],scripts:{prepack:"gulp",release:"gulp publish",start:"gulp cli && node bin/php_index.cjs --help"}};var A=`
Build the PHP Index redistributable.

Usage:
  npx @cedx/php-index [options] [phar]

Arguments:
  phar            The path to the output Phar archive.

Options:
  -c, --compress  Compress the Phar archive.
  -p, --phpinfo   Add a link to the PHP information.
  -h, --help      Display this help.
  -v, --version   Output the version number.
`;async function F(){let{positionals:e,values:i}=(0,l.parseArgs)({allowPositionals:!0,options:{compress:{short:"c",type:"boolean",default:!1},help:{short:"h",type:"boolean",default:!1},phpinfo:{short:"p",type:"boolean",default:!1},version:{short:"v",type:"boolean",default:!1}}});if(i.help||i.version)return a.default.log(i.version?m.version:A.trim());let s=(0,t.join)(__dirname,".."),p=await(0,o.mkdtemp)((0,t.join)((0,f.tmpdir)(),"phpindex-"));for(let r of["lib","www"])await(0,o.cp)((0,t.join)(s,r),(0,t.join)(p,r),{recursive:!0});await(0,o.rm)((0,t.join)(p,"www/index.php"));let n=async(r,w,g)=>(0,o.writeFile)(r,(await(0,o.readFile)(r,{encoding:"utf8"})).replace(w,g)),c=i.phpinfo?"true":"false";await n((0,t.join)(p,"lib/config.json"),/"phpInfo":\s?[^,]+,/,`"phpInfo": ${c},`),await n((0,t.join)(p,"www/js/main.js"),/phpInfo:\s?[^,]+,/,`phpInfo: ${c},`);let d=(0,t.resolve)(e.length?e[0]:"index.phar");return await(0,o.mkdir)((0,t.dirname)(d),{recursive:!0}),(0,l.promisify)(u.execFile)("php",[(0,t.join)(s,"bin/php_index.php"),"--input",p,"--output",d].concat(i.compress?["--compress"]:[]))}F().catch(e=>{a.default.error(e instanceof Error?e.message:e),(0,b.exit)(1)});
